@{
    ViewData["Title"] = "Tasks List";
    Layout = "../Shared/_TaskLayout.cshtml";
}

<!-- Include SweetAlert2 libraries -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>

    <script>
        $(document).ready(function () {
            loaddata();
        });

        function loaddata() {
            $.ajax({
                url: '/Ajax/GetTasks/' +@Context.Session.GetInt32("EmpId"),
                type: 'GET',
                success: function (response) {
                    const tableBody = $('#taskTable tbody');
                    tableBody.empty();
                    var id = 1;
                    response.forEach(function (task) {
                        const row = ` <tr>
                                                <td>${id++}</td>
                                                <td>
                                                    <button type="button" class="btn btn-primary" onclick="EditTasks(${task.c_taskId});">
                                                    üìù
                                                    </button>
                                                </td>
                                                <td>${task.c_taskId}</td>
                                                <td>${task.c_title}</td>
                                                <td>${task.c_description}</td>
                                                <td>${task.c_estimatedDays}</td>
                                                <td>${task.c_startDate}</td>
                                                <td>${task.c_endDate}</td>
                                                <td>${task.c_status}</td>
                                                <td>
                                                    <button type="button" class="btn btn-danger" onclick="DeleteTasks(${task.c_taskId},'${task.c_title}')">
                                                    &#x2718;
                                                    </button>
                                                </td>
                                        </tr>`;
                        tableBody.append(row);
                    });
                },
                error: function (xhr, Status, error) {
                    $('#responseMessage').addClass("alert alert-danger");
                    $('#responseMessage').text('Error: ' + xhr.responseText);
                }
            });
        }

        $('#taskForm').validate({
            rules:{
                title:{
                    required:true,
                    maxlength:50
                },
                description:{
                    required:true,
                    maxlength:500
                },
                estimateddays:{
                    required:true
                },
                startdate:{
                    required:true
                },
                enddate:{
                    required:true
                },
                status:{
                   required:true 
                }
            },
            messages:{
                title:{
                    required:"Please fill title",
                    maxlength:"Maximum length must be 50 char"
                },
                description:{
                    required:"Please fill description",
                    maxlength:"Maximum length must be 500 char"

                },
                estimateddays:{
                    required:"Please fill estimateddays "
                },
                startdate:{
                    required:"Select startdate "
                },
                enddate:{
                    required:"Select enddate"
                },
                status:{
                   required:"Select status"
                }
            },
            errorPlacement: function (error, element) {
                error.insertAfter(element);
            },
            errorClass: "error",
            errorElement: "span",
            submitHandler: function (form) {
                savedata();
            }

        });

        $('#savetask').click(function(){
            if($('#taskForm').valid()){
                savedata();
            }
        });

        function savedata() {
            var formData = new FormData();
            formData.append("c_empId",@Context.Session.GetInt32("EmpId"));
            formData.append("c_title", $('#title').val());
            formData.append("c_description", $('#description').val());
            formData.append("c_estimatedDays", $('#estimateddays').val());
            formData.append("c_startDate", $('#startdate').val());
            formData.append("c_endDate", $('#enddate').val());
            formData.append("c_status", $('#status').val());
            formData.append("c_taskId", $('#taskid').val());

            $.ajax({
                url: 'Ajax/Add',
                type: 'post',
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    $('#exampleModal').modal('hide');
                    loaddata();
                    showAlert(response.message, 'success');
                },
                error: function (xhr, status, error) {
                    console.log(error.message);
                    showAlert(response.message, 'danger');
                }
            });
        }

        function cleardata() {
            $('#taskForm')[0].reset();
        }

        function EditTasks(id) {
            $('#exampleModal').modal('show');
            $('#exampleModalLabel').text('Edit Tasks');
            $('#savetask').text('Update tasks');
            cleardata();
            $.ajax({
                url: 'Ajax/GetOnetasks/' + id,
                type: 'GET',
                contentType: false,
                processData: false,
                success: function (response) {
                    console.log(response);
                    $('#taskid').val(response.c_taskId);
                    $('#title').val(response.c_title);
                    $('#description').val(response.c_description);
                    $('#estimateddays').val(response.c_estimatedDays);
                    $('#startdate').val(response.c_startDate.split("T")[0]);
                    $('#enddate').val(response.c_endDate.split("T")[0]);
                    $('#status').val(response.c_status);
                },
                error: function (xhr, status, error) {
                    console.log(error.message);
                }
            });
        }

        function DeleteTasks(id, name) {

            Swal.fire({
                title: 'Are you Sure?',
                text: 'This action cannot be undone!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: 'Ajax/Delete/' + id,
                        type: 'GET',
                        contentType: false,
                        processData: false,
                        success: function (response) {
                            loaddata();
                        },
                        error: function (xhr, status, error) {
                            console.log(error.message);
                        }
                    });
                }
            });


        }

        function showAlert(message, type) {
            Swal.fire({
                title: type === 'success' ? 'Success' : 'Error!',
                text: message,
                icon: type,
                confirmButtonText: 'OK'
            });
        }
    </script>

}

<style>
    .error{
        color: red;
    }
</style>

<div class="container mt-3">
    <h2>Task List</h2>
    <button type="button" class="btn btn-primary"
        onclick="$('#exampleModal').modal('show');$('#exampleModalLabel').text('Add Tasks');$('#savetask').text('Add tasks'); cleardata();">
        Add Tasks
    </button>
    <div id="responseMessage" class="mt-3 alert-danger container"></div>

    <table class="table table-bordered" id="taskTable">
        <thead>
            <tr>
                <th>Sr No.</th>
                <th>Edit</th>
                <th>Task Id</th>
                <th>Title</th>
                <th>Description</th>
                <th>Estimated Days</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Status</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>

        </tbody>
    </table>
</div>

<!-- Button trigger modal -->


<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="close" onclick="$('#exampleModal').modal('hide');">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container mt-4">
                    <div class="card">
                        <div class="card-body">
                            <form enctype="multipart/form-data" id="taskForm">
                                <input type="hidden" id="taskid" value="0">
                                <div class="form-group mb-3">
                                    <label class="form-label" for="title">Title</label>
                                    <input class="form-control" id="title" name="title" required />

                                </div>

                                <div class="form-group mb-3">
                                    <label class="form-label" for="description">Description</label>
                                    <textarea class="form-control" rows="4" id="description" name="description"
                                        required></textarea>

                                </div>

                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group mb-3">
                                            <label class="form-label" for="estimateddays">Estimated Days</label>
                                            <input type="number" class="form-control" id="estimateddays"
                                                name="estimateddays" min="1" required />

                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group mb-3">
                                            <label class="form-label" for="startdate">Start Date</label>
                                            <input type="date" class="form-control" id="startdate" name="startdate"
                                                required />

                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group mb-3">
                                            <label class="form-label" for="enddate">End Date</label>
                                            <input type="date" class="form-control" id="enddate" name="enddate"
                                                required />

                                        </div>
                                    </div>
                                </div>

                                <div class="form-group mb-3">
                                    <label class="form-label" for="status">Status</label>
                                    <select class="form-select" id="status" name="status" required>
                                        <option value="">Select Status</option>
                                        <option value="Active">Active</option>
                                        <option value="Pending">Pending</option>
                                        <option value="Completed">Completed</option>
                                        <option value="Cancelled">Cancelled</option>
                                    </select>

                                </div>


                            </form>
                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary"
                    onclick="$('#exampleModal').modal('hide');">Close</button>
                <button type="button" class="btn btn-primary" id="savetask">Save changes</button>
            </div>
        </div>
    </div>
</div>